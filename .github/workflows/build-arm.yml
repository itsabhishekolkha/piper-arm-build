name: Build ARM Binary

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-arm:
    runs-on: macos-14
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    # Install system dependencies needed for building piper-phonemize
    - name: Install system dependencies
      run: |
        brew install espeak-ng cmake pkg-config
        # Set environment variables for building
        echo 'export PKG_CONFIG_PATH="/opt/homebrew/lib/pkgconfig:$PKG_CONFIG_PATH"' >> ~/.bash_profile
        echo 'export CPATH="/opt/homebrew/include:$CPATH"' >> ~/.bash_profile
        echo 'export LIBRARY_PATH="/opt/homebrew/lib:$LIBRARY_PATH"' >> ~/.bash_profile
        source ~/.bash_profile
    
    - name: Install dependencies with conda
      run: |
        # Install conda
        curl -L https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh -o miniconda.sh
        bash miniconda.sh -b -p $HOME/miniconda
        source $HOME/miniconda/bin/activate
        conda init bash
        source ~/.bash_profile
        
        # Create conda environment and install packages
        conda create -n piper python=3.11 -y
        conda activate piper
        conda install -c conda-forge piper-tts -y
        pip install pyinstaller
    
    - name: Find espeak-ng-data path
      id: espeak-path
      run: |
        source $HOME/miniconda/bin/activate
        conda activate piper
        ESPEAK_PATH=$(python -c "import piper_phonemize; import os; print(os.path.join(os.path.dirname(piper_phonemize.__file__), 'espeak-ng-data'))")
        echo "path=$ESPEAK_PATH" >> $GITHUB_OUTPUT
    
    - name: Build ARM binary
      run: |
        source $HOME/miniconda/bin/activate
        conda activate piper
        pyinstaller \
          --add-data "${{ steps.espeak-path.outputs.path }}:piper_phonemize/espeak-ng-data" \
          --onefile \
          --name piper-arm \
          piper_main.py
    
    - name: Upload ARM binary
      uses: actions/upload-artifact@v4
      with:
        name: piper-arm-binary
        path: dist/piper-arm
